{
    "rclcpp::Publisher<MessageT, Alloc>::Publisher": {
        "args": [
            "rclcpp::node_interfaces::NodeBaseInterface *",
            "const std::string &",
            "const rcl_publisher_options_t &",
            "const PublisherEventCallbacks &",
            "const std::shared_ptr<MessageAlloc> &"
        ],
        "return": "rclcpp::Publisher<MessageT, Alloc",
        "template": [
            {
                "name": "MessageT"
            },
            {
                "name": "Alloc",
                "value": "std::allocator<void>"
            }
        ],
        "include": "rclcpp/publisher.hpp",
        "ref": [
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#aa5f38fe7d4caaecf845b10499209e08e",
            "http://en.cppreference.com/w/cpp/string/basic_string.html",
            "http://docs.ros2.org/dashing/api/rcl/structrcl__publisher__options__t.html",
            "http://en.cppreference.com/w/cpp/memory/shared_ptr.html",
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html",
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1node__interfaces_1_1NodeBaseInterface.html",
            "http://docs.ros2.org/latest/api/rclcpp/structrclcpp_1_1PublisherEventCallbacks.html",
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#ae5e978b90f43210b6b30d62d592b9e74"
        ],
        "func_type": "constructor"
    },
    "rclcpp::Publisher<MessageT, Alloc>::make_mapped_ring_buffer": {
        "args": [
            "size_t"
        ],
        "return": "mapped_ring_buffer::MappedRingBufferBase::SharedPtr rclcpp::Publisher<MessageT, Alloc",
        "template": [
            {
                "name": "MessageT"
            },
            {
                "name": "Alloc",
                "value": "std::allocator<void>"
            }
        ],
        "include": "rclcpp/publisher.hpp",
        "ref": [
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#adb330b42f444cdde85eb08912c172ee8",
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html",
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1PublisherBase.html#af5b926c2abfc28e30646f31662a9b732"
        ]
    },
    "rclcpp::Publisher<MessageT, Alloc>::publish": [
        {
            "args": [
                "std::unique_ptr<MessageT, MessageDeleter>"
            ],
            "return": "virtual void rclcpp::Publisher<MessageT, Alloc",
            "template": [
                {
                    "name": "MessageT"
                },
                {
                    "name": "Alloc",
                    "value": "std::allocator<void>"
                }
            ],
            "include": "rclcpp/publisher.hpp",
            "ref": [
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#ac1ebb44f82f908c469864f8c3ba82ced",
                "http://en.cppreference.com/w/cpp/memory/unique_ptr.html",
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html",
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#af60275406433cffe46b29d8d91709158"
            ]
        },
        {
            "args": [
                "const std::shared_ptr<const MessageT> &"
            ],
            "return": "virtual void rclcpp::Publisher<MessageT, Alloc",
            "template": [
                {
                    "name": "MessageT"
                },
                {
                    "name": "Alloc",
                    "value": "std::allocator<void>"
                }
            ],
            "include": "rclcpp/publisher.hpp",
            "ref": [
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#a5d7f018dfbefa16d20e724b4e9f902ae",
                "http://en.cppreference.com/w/cpp/memory/shared_ptr.html",
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html"
            ]
        },
        {
            "args": [
                "const MessageT &"
            ],
            "return": "virtual void rclcpp::Publisher<MessageT, Alloc",
            "template": [
                {
                    "name": "MessageT"
                },
                {
                    "name": "Alloc",
                    "value": "std::allocator<void>"
                }
            ],
            "include": "rclcpp/publisher.hpp",
            "ref": [
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#a0b4acb5e7d57b9e0cce84564c86caab3",
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html"
            ]
        },
        {
            "args": [
                "const MessageT *"
            ],
            "return": "virtual void rclcpp::Publisher<MessageT, Alloc",
            "template": [
                {
                    "name": "MessageT"
                },
                {
                    "name": "Alloc",
                    "value": "std::allocator<void>"
                }
            ],
            "include": "rclcpp/publisher.hpp",
            "ref": [
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#afe24c65235f80bb331994595453d6798",
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html"
            ]
        },
        {
            "args": [
                "const rcl_serialized_message_t &"
            ],
            "return": "void rclcpp::Publisher<MessageT, Alloc",
            "template": [
                {
                    "name": "MessageT"
                },
                {
                    "name": "Alloc",
                    "value": "std::allocator<void>"
                }
            ],
            "include": "rclcpp/publisher.hpp",
            "ref": [
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#ae3c01c294aa92d63ef2aaaed90280ef5",
                "http://docs.ros2.org/dashing/api/rcl/types_8h.html#aacac4adc45d07815b73188eafd77d705",
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html"
            ]
        },
        {
            "args": [
                "const rcl_serialized_message_t *"
            ],
            "return": "void rclcpp::Publisher<MessageT, Alloc",
            "template": [
                {
                    "name": "MessageT"
                },
                {
                    "name": "Alloc",
                    "value": "std::allocator<void>"
                }
            ],
            "include": "rclcpp/publisher.hpp",
            "ref": [
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#aa6255c4fdce4c645e8c5061cb6c19b29",
                "http://docs.ros2.org/dashing/api/rcl/types_8h.html#aacac4adc45d07815b73188eafd77d705",
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html"
            ]
        },
        {
            "args": [
                "std::shared_ptr<const rcl_serialized_message_t>"
            ],
            "return": "void rclcpp::Publisher<MessageT, Alloc",
            "template": [
                {
                    "name": "MessageT"
                },
                {
                    "name": "Alloc",
                    "value": "std::allocator<void>"
                }
            ],
            "include": "rclcpp/publisher.hpp",
            "ref": [
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#a897ef4622de42252260a1975cb368c7f",
                "http://en.cppreference.com/w/cpp/memory/shared_ptr.html",
                "http://docs.ros2.org/dashing/api/rcl/types_8h.html#aacac4adc45d07815b73188eafd77d705",
                "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html"
            ]
        }
    ],
    "rclcpp::Publisher<MessageT, Alloc>::get_allocator": {
        "args": [
            "void"
        ],
        "return": "std::shared_ptr<MessageAlloc> rclcpp::Publisher<MessageT, Alloc",
        "template": [
            {
                "name": "MessageT"
            },
            {
                "name": "Alloc",
                "value": "std::allocator<void>"
            }
        ],
        "include": "rclcpp/publisher.hpp",
        "ref": [
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#a79e2292d6b777c18c9e2e4407895cd06",
            "http://en.cppreference.com/w/cpp/memory/shared_ptr.html",
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html#ae5e978b90f43210b6b30d62d592b9e74",
            "http://docs.ros2.org/latest/api/rclcpp/classrclcpp_1_1Publisher.html"
        ]
    }
}